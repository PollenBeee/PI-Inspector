QUALIFIED_TYPE_NAME=1
VOID_TYPE=2
BOOLEAN_TYPE=3
BYTE_TYPE=4
SHORT_TYPE=5
CHAR_TYPE=6
INT_TYPE=7
LONG_TYPE=8
FLOAT_TYPE=9
DOUBLE_TYPE=10
COMPOUND_METHOD_ARG_LITERAL=11
LBRACK=12
RBRACK=13
LPAREN=14
RPAREN=15
LBRACE=16
RBRACE=17
COLON=18
ASSIGN=19
DOT=20
SUB=21
COMMA=22
SLASH=23
LT=24
GT=25
ARROW=26
SEMI=27
PROLOGUE=28
METHOD_DIRECTIVE=29
METHOD_END_DIRECTIVE=30
CLASS_DIRECTIVE=31
SOURCE_DIRECTIVE=32
IMPLEMENTS_DIRECTIVE=33
SUPER_DIRECTIVE=34
FIELD_DIRECTIVE=35
REGISTERS_DIRECTIVE=36
LOCALS_DIRECTIVE=37
PARAM_DIRECTIVE=38
LINE_DIRECTIVE=39
CATCH_DIRECTIVE=40
CATCHALL_DIRECTIVE=41
ANNOTATION_DIRECTIVE=42
ANNOTATION_END_DIRECTIVE=43
SUBANNOTATION_DIRECTIVE=44
SUBANNOTATION_END_DIRECTIVE=45
LOCAL_DIRECTIVE=46
LOCAL_END_DIRECTIVE=47
RESTART_LOCAL_DIRECTIVE=48
PACKED_SWITCH_DIRECTIVE=49
PACKED_SWITCH_END_DIRECTIVE=50
ARRAY_DATA_DIRECTIVE=51
ARRAY_DATA_END_DIRECTIVE=52
SPARSE_SWITCH_DIRECTIVE=53
SPARSE_SWITCH_END_DIRECTIVE=54
PARAM_END_DIRECTIVE=55
PUBLIC=56
PRIVATE=57
PROTECTED=58
FINAL=59
ANNOTATION=60
STATIC=61
SYNTHETIC=62
CONSTRUCTOR=63
INIT=64
ABSTRACT=65
ENUM=66
INTERFACE=67
TRANSIENT=68
BRIDGE=69
DECLARED_SYNCHRONIZED=70
VOLATILE=71
STRICTFP=72
VARARGS=73
NATIVE=74
OP_NOP=75
OP_MOVE=76
OP_MOVE_FROM16=77
OP_MOVE_16=78
OP_MOVE_WIDE=79
OP_MOVE_WIDE_FROM16=80
OP_MOVE_WIDE_16=81
OP_MOVE_OBJECT=82
OP_MOVE_OBJECT_FROM16=83
OP_MOVE_OBJECT_16=84
OP_MOVE_RESULT=85
OP_MOVE_RESULT_WIDE=86
OP_MOVE_RESULT_OBJECT=87
OP_MOVE_EXCEPTION=88
OP_RETURN_VOID=89
OP_RETURN=90
OP_RETURN_WIDE=91
OP_RETURN_OBJECT=92
OP_CONST_4=93
OP_CONST_16=94
OP_CONST=95
OP_CONST_HIGH16=96
OP_CONST_WIDE_16=97
OP_CONST_WIDE_32=98
OP_CONST_WIDE=99
OP_CONST_WIDE_HIGH16=100
OP_CONST_STRING=101
OP_CONST_STRING_JUMBO=102
OP_CONST_CLASS=103
OP_MONITOR_ENTER=104
OP_MONITOR_EXIT=105
OP_CHECK_CAST=106
OP_INSTANCE_OF=107
OP_ARRAY_LENGTH=108
OP_NEW_INSTANCE=109
OP_NEW_ARRAY=110
OP_FILLED_NEW_ARRAY=111
OP_FILLED_NEW_ARRAY_RANGE=112
OP_FILL_ARRAY_DATA=113
OP_THROW=114
OP_GOTO=115
OP_GOTO_16=116
OP_GOTO_32=117
OP_CMPL_FLOAT=118
OP_CMPG_FLOAT=119
OP_CMPL_DOUBLE=120
OP_CMPG_DOUBLE=121
OP_CMP_LONG=122
OP_IF_EQ=123
OP_IF_NE=124
OP_IF_LT=125
OP_IF_GE=126
OP_IF_GT=127
OP_IF_LE=128
OP_IF_EQZ=129
OP_IF_NEZ=130
OP_IF_LTZ=131
OP_IF_GEZ=132
OP_IF_GTZ=133
OP_IF_LEZ=134
OP_AGET=135
OP_AGET_WIDE=136
OP_AGET_OBJECT=137
OP_AGET_BOOLEAN=138
OP_AGET_BYTE=139
OP_AGET_CHAR=140
OP_AGET_SHORT=141
OP_APUT=142
OP_APUT_WIDE=143
OP_APUT_OBJECT=144
OP_APUT_BOOLEAN=145
OP_APUT_BYTE=146
OP_APUT_CHAR=147
OP_APUT_SHORT=148
OP_IGET=149
OP_IGET_WIDE=150
OP_IGET_OBJECT=151
OP_IGET_BOOLEAN=152
OP_IGET_BYTE=153
OP_IGET_CHAR=154
OP_IGET_SHORT=155
OP_IPUT=156
OP_IPUT_WIDE=157
OP_IPUT_OBJECT=158
OP_IPUT_BOOLEAN=159
OP_IPUT_BYTE=160
OP_IPUT_CHAR=161
OP_IPUT_SHORT=162
OP_SGET=163
OP_SGET_WIDE=164
OP_SGET_OBJECT=165
OP_SGET_BOOLEAN=166
OP_SGET_BYTE=167
OP_SGET_CHAR=168
OP_SGET_SHORT=169
OP_SPUT=170
OP_SPUT_WIDE=171
OP_SPUT_OBJECT=172
OP_SPUT_BOOLEAN=173
OP_SPUT_BYTE=174
OP_SPUT_CHAR=175
OP_SPUT_SHORT=176
OP_INVOKE_VIRTUAL=177
OP_INVOKE_SUPER=178
OP_INVOKE_DIRECT=179
OP_INVOKE_STATIC=180
OP_INVOKE_INTERFACE=181
OP_INVOKE_VIRTUAL_RANGE=182
OP_INVOKE_SUPER_RANGE=183
OP_INVOKE_DIRECT_RANGE=184
OP_INVOKE_STATIC_RANGE=185
OP_INVOKE_INTERFACE_RANGE=186
OP_NEG_INT=187
OP_NOT_INT=188
OP_NEG_LONG=189
OP_NOT_LONG=190
OP_NEG_FLOAT=191
OP_NEG_DOUBLE=192
OP_INT_TO_LONG=193
OP_INT_TO_FLOAT=194
OP_INT_TO_DOUBLE=195
OP_LONG_TO_INT=196
OP_LONG_TO_FLOAT=197
OP_LONG_TO_DOUBLE=198
OP_FLOAT_TO_INT=199
OP_FLOAT_TO_LONG=200
OP_FLOAT_TO_DOUBLE=201
OP_DOUBLE_TO_INT=202
OP_DOUBLE_TO_LONG=203
OP_DOUBLE_TO_FLOAT=204
OP_INT_TO_BYTE=205
OP_INT_TO_CHAR=206
OP_INT_TO_SHORT=207
OP_ADD_INT=208
OP_SUB_INT=209
OP_MUL_INT=210
OP_DIV_INT=211
OP_REM_INT=212
OP_AND_INT=213
OP_OR_INT=214
OP_XOR_INT=215
OP_SHL_INT=216
OP_SHR_INT=217
OP_USHR_INT=218
OP_ADD_LONG=219
OP_SUB_LONG=220
OP_MUL_LONG=221
OP_DIV_LONG=222
OP_REM_LONG=223
OP_AND_LONG=224
OP_OR_LONG=225
OP_XOR_LONG=226
OP_SHL_LONG=227
OP_SHR_LONG=228
OP_USHR_LONG=229
OP_ADD_FLOAT=230
OP_SUB_FLOAT=231
OP_MUL_FLOAT=232
OP_DIV_FLOAT=233
OP_REM_FLOAT=234
OP_ADD_DOUBLE=235
OP_SUB_DOUBLE=236
OP_MUL_DOUBLE=237
OP_DIV_DOUBLE=238
OP_REM_DOUBLE=239
OP_ADD_INT_2ADDR=240
OP_SUB_INT_2ADDR=241
OP_MUL_INT_2ADDR=242
OP_DIV_INT_2ADDR=243
OP_REM_INT_2ADDR=244
OP_AND_INT_2ADDR=245
OP_OR_INT_2ADDR=246
OP_XOR_INT_2ADDR=247
OP_SHL_INT_2ADDR=248
OP_SHR_INT_2ADDR=249
OP_USHR_INT_2ADDR=250
OP_ADD_LONG_2ADDR=251
OP_SUB_LONG_2ADDR=252
OP_MUL_LONG_2ADDR=253
OP_DIV_LONG_2ADDR=254
OP_REM_LONG_2ADDR=255
OP_AND_LONG_2ADDR=256
OP_OR_LONG_2ADDR=257
OP_XOR_LONG_2ADDR=258
OP_SHL_LONG_2ADDR=259
OP_SHR_LONG_2ADDR=260
OP_USHR_LONG_2ADDR=261
OP_ADD_FLOAT_2ADDR=262
OP_SUB_FLOAT_2ADDR=263
OP_MUL_FLOAT_2ADDR=264
OP_DIV_FLOAT_2ADDR=265
OP_REM_FLOAT_2ADDR=266
OP_ADD_DOUBLE_2ADDR=267
OP_SUB_DOUBLE_2ADDR=268
OP_MUL_DOUBLE_2ADDR=269
OP_DIV_DOUBLE_2ADDR=270
OP_REM_DOUBLE_2ADDR=271
OP_ADD_INT_LIT16=272
OP_RSUB_INT=273
OP_MUL_INT_LIT16=274
OP_DIV_INT_LIT16=275
OP_REM_INT_LIT16=276
OP_AND_INT_LIT16=277
OP_OR_INT_LIT16=278
OP_XOR_INT_LIT16=279
OP_ADD_INT_LIT8=280
OP_RSUB_INT_LIT8=281
OP_MUL_INT_LIT8=282
OP_DIV_INT_LIT8=283
OP_REM_INT_LIT8=284
OP_AND_INT_LIT8=285
OP_OR_INT_LIT8=286
OP_XOR_INT_LIT8=287
OP_SHL_INT_LIT8=288
OP_SHR_INT_LIT8=289
OP_USHR_INT_LIT8=290
OP_INVOKE_POLYMORPHIC=291
OP_INVOKE_POLYMORPHIC_RANGE=292
OP_INVOKE_CUSTOM=293
OP_INVOKE_CUSTOM_RANGE=294
OP_CONST_METHOD_HANDLE=295
OP_CONST_METHOD_TYPE=296
OP_PACKED_SWITCH=297
OP_SPARSE_SWITCH=298
DECIMAL_LITERAL=299
HEX_LITERAL=300
OCT_LITERAL=301
BINARY_LITERAL=302
FLOAT_LITERAL=303
HEX_FLOAT_LITERAL=304
BOOL_LITERAL=305
NULL_LITERAL=306
CHAR_LITERAL=307
STRING_LITERAL=308
IDENTIFIER=309
WS=310
LINE_COMMENT=311
'V'=2
'Z'=3
'B'=4
'S'=5
'C'=6
'I'=7
'J'=8
'F'=9
'D'=10
'['=12
']'=13
'('=14
')'=15
'{'=16
'}'=17
':'=18
'='=19
'.'=20
'-'=21
','=22
'/'=23
'<'=24
'>'=25
'->'=26
';'=27
'.prologue'=28
'.method'=29
'.end method'=30
'.class'=31
'.source'=32
'.implements'=33
'.super'=34
'.field'=35
'.registers'=36
'.locals'=37
'.param'=38
'.line'=39
'.catch'=40
'.catchall'=41
'.annotation'=42
'.end annotation'=43
'.subannotation'=44
'.end subannotation'=45
'.local'=46
'.end local'=47
'.restart local'=48
'.packed-switch'=49
'.end packed-switch'=50
'.array-data'=51
'.end array-data'=52
'.sparse-switch'=53
'.end sparse-switch'=54
'.end param'=55
'public'=56
'private'=57
'protected'=58
'final'=59
'annotation'=60
'static'=61
'synthetic'=62
'constructor'=63
'init'=64
'abstract'=65
'enum'=66
'interface'=67
'transient'=68
'bridge'=69
'declared-synchronized'=70
'volatile'=71
'strictfp'=72
'varargs'=73
'native'=74
'nop'=75
'move'=76
'move/from16'=77
'move/16'=78
'move-wide'=79
'move-wide/from16'=80
'move-wide/16'=81
'move-object'=82
'move-object/from16'=83
'move-object/16'=84
'move-result'=85
'move-result-wide'=86
'move-result-object'=87
'move-exception'=88
'return-void'=89
'return'=90
'return-wide'=91
'return-object'=92
'const/4'=93
'const/16'=94
'const'=95
'const/high16'=96
'const-wide/16'=97
'const-wide/32'=98
'const-wide'=99
'const-wide/high16'=100
'const-string'=101
'const-string/jumbo'=102
'const-class'=103
'monitor-enter'=104
'monitor-exit'=105
'check-cast'=106
'instance-of'=107
'array-length'=108
'new-instance'=109
'new-array'=110
'filled-new-array'=111
'filled-new-array/range'=112
'fill-array-data'=113
'throw'=114
'goto'=115
'goto/16'=116
'goto/32'=117
'cmpl-float'=118
'cmpg-float'=119
'cmpl-double'=120
'cmpg-double'=121
'cmp-long'=122
'if-eq'=123
'if-ne'=124
'if-lt'=125
'if-ge'=126
'if-gt'=127
'if-le'=128
'if-eqz'=129
'if-nez'=130
'if-ltz'=131
'if-gez'=132
'if-gtz'=133
'if-lez'=134
'aget'=135
'aget-wide'=136
'aget-object'=137
'aget-boolean'=138
'aget-byte'=139
'aget-char'=140
'aget-short'=141
'aput'=142
'aput-wide'=143
'aput-object'=144
'aput-boolean'=145
'aput-byte'=146
'aput-char'=147
'aput-short'=148
'iget'=149
'iget-wide'=150
'iget-object'=151
'iget-boolean'=152
'iget-byte'=153
'iget-char'=154
'iget-short'=155
'iput'=156
'iput-wide'=157
'iput-object'=158
'iput-boolean'=159
'iput-byte'=160
'iput-char'=161
'iput-short'=162
'sget'=163
'sget-wide'=164
'sget-object'=165
'sget-boolean'=166
'sget-byte'=167
'sget-char'=168
'sget-short'=169
'sput'=170
'sput-wide'=171
'sput-object'=172
'sput-boolean'=173
'sput-byte'=174
'sput-char'=175
'sput-short'=176
'invoke-virtual'=177
'invoke-super'=178
'invoke-direct'=179
'invoke-static'=180
'invoke-interface'=181
'invoke-virtual/range'=182
'invoke-super/range'=183
'invoke-direct/range'=184
'invoke-static/range'=185
'invoke-interface/range'=186
'neg-int'=187
'not-int'=188
'neg-long'=189
'not-long'=190
'neg-float'=191
'neg-double'=192
'int-to-long'=193
'int-to-float'=194
'int-to-double'=195
'long-to-int'=196
'long-to-float'=197
'long-to-double'=198
'float-to-int'=199
'float-to-long'=200
'float-to-double'=201
'double-to-int'=202
'double-to-long'=203
'double-to-float'=204
'int-to-byte'=205
'int-to-char'=206
'int-to-short'=207
'add-int'=208
'sub-int'=209
'mul-int'=210
'div-int'=211
'rem-int'=212
'and-int'=213
'or-int'=214
'xor-int'=215
'shl-int'=216
'shr-int'=217
'ushr-int'=218
'add-long'=219
'sub-long'=220
'mul-long'=221
'div-long'=222
'rem-long'=223
'and-long'=224
'or-long'=225
'xor-long'=226
'shl-long'=227
'shr-long'=228
'ushr-long'=229
'add-float'=230
'sub-float'=231
'mul-float'=232
'div-float'=233
'rem-float'=234
'add-double'=235
'sub-double'=236
'mul-double'=237
'div-double'=238
'rem-double'=239
'add-int/2addr'=240
'sub-int/2addr'=241
'mul-int/2addr'=242
'div-int/2addr'=243
'rem-int/2addr'=244
'and-int/2addr'=245
'or-int/2addr'=246
'xor-int/2addr'=247
'shl-int/2addr'=248
'shr-int/2addr'=249
'ushr-int/2addr'=250
'add-long/2addr'=251
'sub-long/2addr'=252
'mul-long/2addr'=253
'div-long/2addr'=254
'rem-long/2addr'=255
'and-long/2addr'=256
'or-long/2addr'=257
'xor-long/2addr'=258
'shl-long/2addr'=259
'shr-long/2addr'=260
'ushr-long/2addr'=261
'add-float/2addr'=262
'sub-float/2addr'=263
'mul-float/2addr'=264
'div-float/2addr'=265
'rem-float/2addr'=266
'add-double/2addr'=267
'sub-double/2addr'=268
'mul-double/2addr'=269
'div-double/2addr'=270
'rem-double/2addr'=271
'add-int/lit16'=272
'rsub-int'=273
'mul-int/lit16'=274
'div-int/lit16'=275
'rem-int/lit16'=276
'and-int/lit16'=277
'or-int/lit16'=278
'xor-int/lit16'=279
'add-int/lit8'=280
'rsub-int/lit8'=281
'mul-int/lit8'=282
'div-int/lit8'=283
'rem-int/lit8'=284
'and-int/lit8'=285
'or-int/lit8'=286
'xor-int/lit8'=287
'shl-int/lit8'=288
'shr-int/lit8'=289
'ushr-int/lit8'=290
'invoke-polymorphic'=291
'invoke-polymorphic/range'=292
'invoke-custom'=293
'invoke-custom/range'=294
'const-method-handle'=295
'const-method-type'=296
'packed-switch'=297
'sparse-switch'=298
'null'=306
